{"version":3,"sources":["components/MyNavbar.js","components/Home.js","components/MyMusic.js","components/ListOfSpotifyApiCalls.js","components/Friends.js","components/Nearby.js","components/Rando.js","components/UserPage.js","components/Login.js","components/ContentArea.js","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","props","react_default","a","createElement","Fragment","className","style","backgroundColor","href","onClick","showThisPage","fontSize","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","color","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","page","target","name","bind","assertThisInitialized","pageButtons","whiteSpace","fontWeight","width","height","WebkitTextStroke","border","React","Component","MyMusic","state","nicoleSpotifyID","playlistID","accessToken","URLSearchParams","window","location","search","get","getConfig","method","headers","Authorization","concat","fetch","then","res","json","data","console","log","catch","err","Friends","Nearby","Rando","UserPage","setState","components_MyNavbar","components_Home","components_MyMusic","components_Friends","components_Nearby","components_Rando","Login","signInWithSpotify","pickPage","user","spotifyLoginURL","borderWidth","ContentArea","Route","exact","path","component","App","BrowserRouter","components_ContentArea","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5cdda415.chunk.js","sourcesContent":["import React from 'react';\n\nconst MyNavbar = (props) => {\n\n    return (\n        <React.Fragment>\n\n            <nav className=\"navbar navbar-expand-sm navbar-dark container-fluid fixed-top\" style={{backgroundColor: '#F36D76'}}>\n\n                {/* brand-home */}\n                <a className=\"navbar-brand px-3\" href=\"#\" onClick={() => { props.showThisPage('home') }}>\n                    <span className=\"navbar-brand font-weight-bold\" style={{fontSize: 'x-large'}}>whatMusic </span>\n                </a>\n                {/* toggler-icon */}\n                <button className=\"navbar-toggler mx-3\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                {/*navbar = myMusic / friends / nearby / rando */}\n                <div className=\"collapse navbar-collapse px-3\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ml-auto text-center font-weight-bold\">\n                        <li className=\"nav-item mx-1\">\n                            <a className=\"nav-link\" href=\"#\" style={{color: 'white'}} onClick={() => { props.showThisPage('mymusic') }}>My Music</a>\n                        </li>\n                        <li className=\"nav-item mx-1\">\n                            <a className=\"nav-link\" href=\"#\" style={{color: 'white'}} onClick={() => { props.showThisPage('friends') }}>Search Friends</a>\n                        </li>\n                        <li className=\"nav-item mx-1\">\n                            <a className=\"nav-link\" href=\"#\" style={{color: 'white'}} onClick={() => { props.showThisPage('nearby') }}>Find Nearby</a>\n                        </li>\n                        <li className=\"nav-item mx-1\">\n                            <a className=\"nav-link\" href=\"#\" style={{color: 'white'}} onClick={() => { props.showThisPage('rando') }}>Meet Rando</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n\n        </React.Fragment>\n    );\n\n};\n\nexport default MyNavbar;","import React from 'react';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.showThisPage = this.showThisPage.bind(this);\n    }\n\n    componentDidMount() { }\n\n    showThisPage = (e) => {\n        const page = e.target.name;\n        this.props.showThisPage(page);\n\n    };\n\n\n\n    render() {\n\n        const pageButtons = {\n            whiteSpace: 'normal',\n            fontWeight: 'bold',\n            width: '150px',\n            height: '200px',\n            fontSize: 'xx-large',\n            WebkitTextStroke: '1px teal',\n            color: 'white',\n            border: '5px solid teal',\n        };\n        const testing = {\n            WebkitTextStroke: '5px purple',\n        };\n\n        return (<React.Fragment>\n            <div>\n\n                <h1 className=\"text-center font-weight-bold\">Welcome</h1>\n\n                <div className=\"container-fluid text-center mt-3\" style={{}}>\n                    <div className=\"\">\n                        <button name=\"mymusic\" className=\"btn btn-lg btn-outline-success m-3\" style={pageButtons} onClick={this.showThisPage}>My Music</button>\n                        <button name=\"friends\" className=\"btn btn-lg btn-outline-success m-3\" style={pageButtons} onClick={this.showThisPage}>Search for Friends</button>\n                    </div>\n                    <div className=\"\">\n                        <button name=\"nearby\" className=\"btn btn-lg btn-outline-success m-3\" style={pageButtons} onClick={this.showThisPage}>Find Nearby</button>\n                        <button name=\"rando\" className=\"btn btn-lg btn-outline-success m-3\" style={pageButtons} onClick={this.showThisPage}>Meet a Rando</button>\n                    </div>\n                </div>\n\n            </div>\n        </React.Fragment>);\n    }\n\n}\n\nexport default Home;","import React from 'react';\nimport ListOfSpotifyApiCalls from \"./ListOfSpotifyApiCalls\";\n\n\nclass MyMusic extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            nicoleSpotifyID: '1215746208',\n            playlistID: '37i9dQZF1DX76Wlfdnj7AP',\n\n        };\n        // declare methods here;\n\n    }\n\n    componentDidMount() {\n        const searchParams = new URLSearchParams(window.location.search);\n        const accessToken = searchParams.get('access_token');\n        const getConfig = {\n            method: 'GET',\n            headers: { Authorization: `Bearer ${accessToken}` }\n        };\n\n        // @DESC get my profile\n        // @ROUTE GET /v1/me\n        fetch('https://api.spotify.com/v1/me', getConfig)\n            .then(res => res.json())\n            .then(data => {\n                console.log(\"*** spotify/v1/me ***\", data);\n            })\n            .catch(err => console.log(err));\n\n\n\n\n\n        // @DESC Get Current User's Top Artists\n        // @ROUTE GET /v1/me/top/artists\n        fetch('https://api.spotify.com/v1/me/top/artists?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my top artists ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n        // @DESC Get Current User's Top Tracks\n        // @ROUTE GET /v1/me/top/tracks\n        fetch('https://api.spotify.com/v1/me/top/tracks?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my top tracks ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n        // @DESC Get Current User's Recently Played Tracks\n        // @ROUTE GET /v1/me/player/recently-played\n        fetch('https://api.spotify.com/v1/me/player/recently-played?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my recently played ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n        // @DESC Get a List of Current User's Playlists\n        // @ROUTE GET /v1/me/playlists\n        fetch('https://api.spotify.com/v1/me/playlists?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my playlists ***', data))\n            .catch(err => console.log(err));\n\n\n\n        // @DESC Get User's Followed Artists\n        // @ROUTE GET /v1/me/following?type=artist\n        fetch('https://api.spotify.com/v1/me/following?type=artist&limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my followed artists ***', data))\n            .catch(err => console.log(err));\n\n\n\n        // @DESC Get Current User's Saved Albums\n        // @ROUTE GET /v1/me/albums\n        fetch('https://api.spotify.com/v1/me/albums?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my saved albums ***', data))\n            .catch(err => console.log(err));\n\n\n\n        // @DESC Get Current User's Saved Tracks\n        // @ROUTE GET /v1/me/tracks\n        fetch('https://api.spotify.com/v1/me/tracks?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my saved tracks ***', data))\n            .catch(err => console.log(err));\n\n\n\n        // @DESC Get a Playlist's Tracks\n        // @ROUTE GET /v1/playlists/{playlist_id}/tracks\n        fetch(`https://api.spotify.com/v1/playlists/${this.state.playlistID}/tracks?limit=100`, getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** a playlist\\'s tracks, by playlist_id ***', data))\n            .catch(err => console.log(err));\n\n\n    }\n\n\n\n    render() {\n        return(<React.Fragment>\n            <div className=\"container\" style={{}}>\n\n\n                <h3 className=\"text-center font-weight-bold\">MyMusic.js</h3>\n\n\n                <span className=\"font-weight-bold\">spotify/v1/me</span>\n                <ul>\n                    <li>country</li>\n                    <li>display_name</li>\n                    <li>email</li>\n                    <li>id (spotify_id)</li>\n                </ul>\n\n\n                <span className=\"font-weight-bold\"></span>\n                <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                </ul>\n\n            </div>\n\n            {/*<ListOfSpotifyApiCalls />*/}\n        </React.Fragment>);\n    }\n\n}\n\n\nexport default MyMusic;","import React from 'react';\n\n\nclass ListOfSpotifyApiCalls extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            nicoleSpotifyID: '1215746208',\n            playlistID: '37i9dQZF1DX76Wlfdnj7AP',\n        };\n        // declare methods here\n    }\n\n    componentDidMount() {\n        const searchParams = new URLSearchParams(window.location.search);\n        const accessToken = searchParams.get('access_token');\n        const getConfig = {\n            method: 'GET',\n            headers: { Authorization: `Bearer ${accessToken}` }\n        };\n\n        // get my profile\n        fetch('https://api.spotify.com/v1/me', getConfig)\n            .then(res => res.json())\n            .then(data => {\n                console.log(\"*** spotify/v1/me ***\", data);\n            })\n            .catch(err => console.log(err));\n\n\n\n\n\n\n        // get nicole's profile\n        fetch(`https://api.spotify.com/v1/users/${this.state.nicoleSpotifyID}`, getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** spotify/v1/nicole ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n\n\n        // @DESC Get User's Followed Artists\n        // @ROUTE GET /v1/me/following?type=artist\n        //  'user-follow-read' to scope in controllers.loginSpotify.querystring\n        fetch('https://api.spotify.com/v1/me/following?type=artist&limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my followed artists ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n\n        // @DESC Get Current User's Saved Albums\n        // @ROUTE GET /v1/me/albums\n        fetch('https://api.spotify.com/v1/me/albums?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my saved albums ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n        // @DESC Get Current User's Saved Tracks\n        // @ROUTE GET /v1/me/tracks\n        fetch('https://api.spotify.com/v1/me/tracks?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my saved tracks ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n\n        // @DESC Get Current User's Top Artists\n        // @ROUTE GET /v1/me/top/artists\n        fetch('https://api.spotify.com/v1/me/top/artists?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my top artists ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n        // @DESC Get Current User's Top Tracks\n        // @ROUTE GET /v1/me/top/tracks\n        fetch('https://api.spotify.com/v1/me/top/tracks?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my top tracks ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n\n        // @DESC Get Current User's Recently Played Tracks\n        // @ROUTE GET /v1/me/player/recently-played\n        fetch('https://api.spotify.com/v1/me/player/recently-played?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my recently played ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n        // @DESC Get a List of Current User's Playlists\n        // @ROUTE GET /v1/me/playlists\n        fetch('https://api.spotify.com/v1/me/playlists?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my playlists ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n        // @DESC Get a List of a User's Playlists\n        // get nicole's playlists\n        // @ROUTE GET /v1/users/{user_id}/playlists\n        fetch(`https://api.spotify.com/v1/users/${this.state.nicoleSpotifyID}/playlists?limit=50`, getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** nicole\\'s playlists ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n        // @DESC Get a Playlist Cover Image\t(list of image objects)\n        // @ROUTE GET /v1/playlists/{playlist_id}/images\n        fetch(`https://api.spotify.com/v1/playlists/${this.state.playlistID}/images`, getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** a playlist\\'s cover image, by playlist_id ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n        // @DESC Get a Playlist\n        // @ROUTE GET /v1/playlists/{playlist_id}\n        fetch(`https://api.spotify.com/v1/playlists/${this.state.playlistID}`, getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** a playlist, by playlist_id ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n\n        // @DESC Get a Playlist's Tracks\n        // @ROUTE GET /v1/playlists/{playlist_id}/tracks\n        fetch(`https://api.spotify.com/v1/playlists/${this.state.playlistID}/tracks?limit=100`, getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** a playlist\\'s tracks, by playlist_id ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n    }\n\n    render() {\n        return(<React.Fragment>\n            <div className=\"\" style={{}}>\n\n            </div>\n\n        </React.Fragment>);\n    }\n\n\n}\n\nexport default ListOfSpotifyApiCalls;","import React from 'react';\n\n\nclass Friends extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return(<React.Fragment>\n            <div className=\"\" style={{}}>\n\n                <h3>i am Friends.js; </h3>\n\n                <p className=\"p-3 m-1\" style={{border: '1px solid black'}}>search bar - search allUsers in dbase by name</p>\n\n                <p className=\"p-3 m-1\" style={{border: '1px solid black'}}>see search results</p>\n            </div>\n        </React.Fragment>);\n    }\n\n}\n\n\nexport default Friends;","import React from 'react';\n\n\nclass Nearby extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return(<React.Fragment>\n            <div className=\"\" style={{}}>\n                <h3>lolz under construction</h3>\n                <p>see what ppl around u like.</p>\n\n            </div>\n        </React.Fragment>);\n    }\n\n}\n\n\nexport default Nearby;","import React from 'react';\n\n\nclass Rando extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return(<React.Fragment>\n            <div className=\"\" style={{}}>\n\n                <h3>I am Rando.js; I will help you meet a rando.</h3>\n\n            </div>\n        </React.Fragment>);\n    }\n\n}\n\n\nexport default Rando;","import React from 'react';\n\nimport MyNavbar from './MyNavbar';\nimport Home from './Home';\n\nimport MyMusic from './MyMusic';\nimport Friends from './Friends';\nimport Nearby from './Nearby';\nimport Rando from './Rando';\n\n\n\n\nclass UserPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showThisPage: 'home',\n        };\n        // declare methods here\n        this.showThisPage = this.showThisPage.bind(this);\n    }\n\n    componentDidMount() { }\n\n    showThisPage = (page) => {\n        this.setState({showThisPage: page});\n    };\n\n\n\n    render() {\n\n\n\n\n\n        return(<React.Fragment>\n            <div className=\"\" style={{}}>\n\n                <MyNavbar showThisPage={this.showThisPage} />\n\n                {this.state.showThisPage === 'home' && <Home showThisPage={this.showThisPage} />}\n\n\n                {this.state.showThisPage === 'mymusic' && <MyMusic />}\n                {this.state.showThisPage === 'friends' && <Friends />}\n                {this.state.showThisPage === 'nearby' && <Nearby />}\n                {this.state.showThisPage === 'rando' && <Rando />}\n\n\n\n\n\n            </div>\n        </React.Fragment>);\n    }\n\n}\n\nexport default UserPage;","import React from 'react';\n\n\nconst backendURI = 'http://localhost:5000';\n// const backendURI = process.env.BACKEND_URI; /* this one doesn't work: process.env... resolves to undefined */\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: this.props.user\n        };\n        // declare methods here\n        this.signInWithSpotify = this.signInWithSpotify.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n\n\n    signInWithSpotify = () => {\n        fetch('/api/login-spotify')\n            .then(res => res.json())\n            .then(() => this.props.pickPage('profile'));\n    };\n\n    render() {\n\n        // const spotifyLoginURL = 'http://localhost:5000/api/login-spotify';\n        const spotifyLoginURL = `${backendURI}/api/login-spotify`;\n\n        return(\n            <React.Fragment>\n                <div className=\"container\">\n                    {/*<p>lol this is login</p>*/}\n                    {/*<button className=\"btn btn-sm btn-outline-primary\" onClick={() => console.log('*** print Login.state ***', this.state)}>print Login.state</button>*/}\n\n                    <h5 className=\"propaganda-text-stroke mb-5 ml-auto text-center\" style={{width: '50%'}}>Musical compatibility is important to many people. And that makes sense - music is really intimate; it's emotional.</h5>\n\n\n                    <h4 className=\"propaganda-text-stroke-black mb-2 mx-auto text-center\" style={{width: '50%'}}>Find your<br/> music soulmate.</h4>\n                    <div className=\"text-center\">\n                        <a href={spotifyLoginURL} style={{}}><button className=\"btn btn-sm btn-outline-primary\" style={{borderWidth: '2px'}}><span className=\"font-weight-bold\"><u>Sign in with Spotify</u></span></button></a>\n                    </div>\n\n                </div>\n\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default Login;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport UserPage from './UserPage';\nimport Login from './Login';\n\n\nclass ContentArea extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n        // declare methods here\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div className=\"root-div\">\n                    <div className=\"my-background\">\n\n                        <Route exact path=\"/\" component={Login} />\n                        <Route path=\"/user\" component={UserPage} />\n\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n};\n\nexport default ContentArea;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport ContentArea from './components/ContentArea';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <React.Fragment>\n                    <ContentArea />\n                </React.Fragment>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}