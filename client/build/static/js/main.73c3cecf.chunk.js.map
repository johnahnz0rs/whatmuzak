{"version":3,"sources":["components/Home.js","components/MyMusic.js","components/Friends.js","components/Nearby.js","components/Rando.js","components/MyNavbar.js","components/UserPage.js","components/Login.js","components/GotAccessToken.js","components/ContentArea.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","root","console","log","accessToken","rootURL","setState","token","match","url","split","_this2","pageButtons","whiteSpace","fontWeight","width","height","fontSize","WebkitTextStroke","color","border","react_default","a","createElement","Fragment","className","style","Link","to","name","onClick","React","Component","withRouter","MyMusic","nicoleSpotifyID","playlistID","URLSearchParams","window","location","search","get","getConfig","method","headers","Authorization","concat","fetch","then","res","json","data","catch","err","Friends","Nearby","Rando","backgroundColor","NavLink","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","UserPage","components_MyNavbar","Switch","Route","path","component","render","components_Home","Login","href","borderWidth","signInWithSpotify","GotAccessToken","params","components_UserPage","ContentArea","exact","App","BrowserRouter","components_ContentArea","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73c3cecf.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            root: null,\n        };\n        // bind methods here\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        if (this.props.accessToken) {\n            const rootURL = '/user/' + this.props.accessToken;\n            this.setState({root: rootURL});\n        } else {\n            const token = '/user/' + this.props.match.url.split('/')[2];\n            console.log('token', token);\n            this.setState({root: token});\n        }\n    }\n\n\n\n\n    render() {\n\n        const pageButtons = {\n            whiteSpace: 'normal',\n            fontWeight: 'bold',\n            width: '150px',\n            height: '200px',\n            fontSize: 'xx-large',\n            WebkitTextStroke: '1px teal',\n            color: 'white',\n            border: '5px solid teal',\n        };\n\n        return (<React.Fragment>\n            <div>\n\n                <h1 className=\"text-center font-weight-bold\">Welcome</h1>\n\n                <div className=\"container-fluid text-center mt-3\" style={{}}>\n                    <div className=\"\">\n                        <Link to={this.state.root + \"/my-music\"}>\n                            <button name=\"mymusic\" className=\"btn btn-lg btn-outline-success m-3\" style={pageButtons} onClick={() => console.log('lol u clicked a box', this.state.root)}>My Music</button>\n                        </Link>\n                        <Link to={this.state.root + \"/friends\"}>\n                            <button name=\"friends\" className=\"btn btn-lg btn-outline-success m-3\" style={pageButtons} onClick={() => console.log('lol u clicked a box', this.state.root)}>Search for Friends</button>\n                        </Link>\n                    </div>\n                    <div className=\"\">\n                        <Link to={this.state.root + \"/nearby\"}>\n                            <button name=\"nearby\" className=\"btn btn-lg btn-outline-success m-3\" style={pageButtons} onClick={() => console.log('lol u clicked a box', this.state.root)}>Find Nearby</button>\n                        </Link>\n                        <Link to={this.state.root + \"/rando\"}>\n                            <button name=\"rando\" className=\"btn btn-lg btn-outline-success m-3\" style={pageButtons} onClick={() => console.log('lol u clicked a box', this.state.root)}>Meet a Rando</button>\n                        </Link>\n                    </div>\n                </div>\n\n            </div>\n        </React.Fragment>);\n    }\n\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// import ListOfSpotifyApiCalls from \"./ListOfSpotifyApiCalls\";\n\n\nclass MyMusic extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            nicoleSpotifyID: '1215746208',\n            playlistID: '37i9dQZF1DX76Wlfdnj7AP',\n            // accessToken: null,\n        };\n        // declare methods here;\n\n    }\n\n    componentDidMount() {\n\n        // const accessToken = this.props.accessToken;\n        const searchParams = new URLSearchParams(window.location.search);\n        const accessToken = searchParams.get('access_token');\n        const getConfig = {\n            method: 'GET',\n            headers: { Authorization: `Bearer ${accessToken}` }\n        };\n\n        // console.log('***** lololololololol *********', accessToken);\n\n        // @DESC get my profile\n        // @ROUTE GET /v1/me\n        fetch('https://api.spotify.com/v1/me', getConfig)\n            .then(res => res.json())\n            .then(data => {\n                console.log(\"*** spotify/v1/me ***\", data);\n            })\n            .catch(err => console.log(err));\n\n\n\n\n\n        // @DESC Get Current User's Top Artists\n        // @ROUTE GET /v1/me/top/artists\n        fetch('https://api.spotify.com/v1/me/top/artists?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my top artists ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n\n\n        // @DESC Get Current User's Top Tracks\n        // @ROUTE GET /v1/me/top/tracks\n        fetch('https://api.spotify.com/v1/me/top/tracks?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my top tracks ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n        // @DESC Get Current User's Recently Played Tracks\n        // @ROUTE GET /v1/me/player/recently-played\n        fetch('https://api.spotify.com/v1/me/player/recently-played?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my recently played ***', data))\n            .catch(err => console.log(err));\n\n\n\n\n        // @DESC Get a List of Current User's Playlists\n        // @ROUTE GET /v1/me/playlists\n        fetch('https://api.spotify.com/v1/me/playlists?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my playlists ***', data))\n            .catch(err => console.log(err));\n\n\n\n        // @DESC Get User's Followed Artists\n        // @ROUTE GET /v1/me/following?type=artist\n        fetch('https://api.spotify.com/v1/me/following?type=artist&limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my followed artists ***', data))\n            .catch(err => console.log(err));\n\n\n\n        // @DESC Get Current User's Saved Albums\n        // @ROUTE GET /v1/me/albums\n        fetch('https://api.spotify.com/v1/me/albums?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my saved albums ***', data))\n            .catch(err => console.log(err));\n\n\n\n        // @DESC Get Current User's Saved Tracks\n        // @ROUTE GET /v1/me/tracks\n        fetch('https://api.spotify.com/v1/me/tracks?limit=50', getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** my saved tracks ***', data))\n            .catch(err => console.log(err));\n\n\n\n        // @DESC Get a Playlist's Tracks\n        // @ROUTE GET /v1/playlists/{playlist_id}/tracks\n        fetch(`https://api.spotify.com/v1/playlists/${this.state.playlistID}/tracks?limit=100`, getConfig)\n            .then(res => res.json())\n            .then(data => console.log('*** a playlist\\'s tracks, by playlist_id ***', data))\n            .catch(err => console.log(err));\n\n\n    }\n\n\n\n    render() {\n        return(<React.Fragment>\n            <div className=\"container\" style={{}}>\n\n\n                <h3 className=\"text-center font-weight-bold\">MyMusic.js</h3>\n\n\n                <span className=\"font-weight-bold\">spotify/v1/me</span>\n                <ul>\n                    <li>country</li>\n                    <li>display_name</li>\n                    <li>email</li>\n                    <li>id (spotify_id)</li>\n                </ul>\n\n\n                <span className=\"font-weight-bold\"></span>\n                <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                </ul>\n\n            </div>\n\n            {/*<ListOfSpotifyApiCalls />*/}\n        </React.Fragment>);\n    }\n\n}\n\n\nexport default withRouter(MyMusic);","import React from 'react';\n\n\nclass Friends extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //\n    // }\n\n    componentDidMount() {\n        console.log(this.props);\n    }\n\n    render() {\n        return(<React.Fragment>\n            <div className=\"\" style={{}}>\n\n                <h3>i am Friends.js; </h3>\n\n                <p className=\"p-3 m-1\" style={{border: '1px solid black'}}>search bar - search allUsers in dbase by name</p>\n\n                <p className=\"p-3 m-1\" style={{border: '1px solid black'}}>see search results</p>\n            </div>\n        </React.Fragment>);\n    }\n\n}\n\n\nexport default Friends;","import React from 'react';\n\n\nclass Nearby extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //\n    // }\n\n    render() {\n        return(<React.Fragment>\n            <div className=\"\" style={{}}>\n                <h3>lolz under construction</h3>\n                <p>see what ppl around u like.</p>\n\n            </div>\n        </React.Fragment>);\n    }\n\n}\n\n\nexport default Nearby;","import React from 'react';\n\n\nclass Rando extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //\n    // }\n\n    render() {\n        return(<React.Fragment>\n            <div className=\"\" style={{}}>\n\n                <h3>I am Rando.js; I will help you meet a rando.</h3>\n\n            </div>\n        </React.Fragment>);\n    }\n\n}\n\n\nexport default Rando;","import React from 'react';\nimport { NavLink, withRouter } from \"react-router-dom\";\n\n\nconst MyNavbar = (props) => {\n\n    console.log('lol this is navbar', props);\n    const rootURL = '/user/' + props.accessToken;\n\n    return (\n\n\n\n        <React.Fragment>\n\n            <nav className=\"navbar navbar-expand-sm navbar-dark container-fluid fixed-top\" style={{backgroundColor: '#F36D76'}}>\n\n                {/* brand-home */}\n                <NavLink to={rootURL + '/home'} className=\"navbar-brand px-3\">\n                    <span className=\"navbar-brand font-weight-bold\" style={{fontSize: 'x-large'}}>whatMusic </span>\n                </NavLink>\n                {/* toggler-icon */}\n                <button className=\"navbar-toggler mx-3\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                {/*navbar = myMusic / friends / nearby / rando */}\n                <div className=\"collapse navbar-collapse px-3\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ml-auto text-center font-weight-bold\">\n                        <li className=\"nav-item mx-1\">\n                            <NavLink to={rootURL + '/my-music'} className=\"nav-link\" style={{color: 'white'}}>My Music</NavLink>\n                        </li>\n                        <li className=\"nav-item mx-1\">\n                            <NavLink to={rootURL + \"/friends\"} className=\"nav-link\" style={{color: 'white'}} >Search Friends</NavLink>\n                        </li>\n                        <li className=\"nav-item mx-1\">\n                            <NavLink to={rootURL + \"/nearby\"} className=\"nav-link\" style={{color: 'white'}}>Find Nearby</NavLink>\n                        </li>\n                        <li className=\"nav-item mx-1\">\n                            <NavLink to={rootURL + \"/rando\"} className=\"nav-link\" style={{color: 'white'}}>Meet Rando</NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n\n        </React.Fragment>\n    );\n\n};\n\nexport default withRouter(MyNavbar);","import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\n// import MyNavbar from './MyNavbar';\nimport Home from './Home';\n\n\nimport MyMusic from './MyMusic';\nimport Friends from './Friends';\nimport Nearby from './Nearby';\nimport Rando from './Rando';\nimport MyNavbar from \"./MyNavbar\";\n\n\n\n\nclass UserPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // showThisPage: 'home',\n            accessToken: this.props.accessToken,\n            // navRoot: this.props.params.url,\n        };\n        // declare methods here\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        //\n        // // const accessToken = this.props.location.search.split('?access_token=')[1];\n        // const accessToken = this.props.match.params.token;\n        //\n        // console.log('from params', accessToken);\n        // this.setState({accessToken: accessToken});\n        //\n        // const navRoot = this.props.match.url.split('/access/')[0];\n        // this.setState({navRoot: navRoot});\n    }\n\n\n\n    render() {\n\n\n\n        return(<React.Fragment>\n            <div className=\"\" style={{}}>\n\n                <MyNavbar accessToken={this.state.accessToken}/>\n\n                <Switch>\n                    {/*<Route path={this.state.navRoot + '/home'} component={Home} />*/}\n                    {/*<Route path={this.state.navRoot + '/friends'} component={Friends} />*/}\n                    {/*/!*<Route path={this.props.match.url + '/my-music'} render={() => <MyMusic accessToken={this.state.accessToken} /> } />*!/*/}\n                    {/*<Route path={this.state.navRoot + '/my-music'} component={MyMusic} />*/}\n                    {/*<Route path={this.state.navRoot + '/rando'} component={Rando} />*/}\n                    {/*<Route path={this.state.navRoot + '/nearby'} component={Nearby} />*/}\n                    {/*<Route path=\"/\" component={Home} />*/}\n\n\n                    <Route path={this.props.match.url + '/home'} component={Home} />\n                    <Route path={this.props.match.url + '/friends'} component={Friends} />\n                    <Route path={this.props.match.url + '/my-music'} component={MyMusic} />\n                    <Route path={this.props.match.url + '/rando'} component={Rando} />\n                    <Route path={this.props.match.url + '/nearby'} component={Nearby} />\n                    <Route path=\"/\" render={() => <Home accessToken={this.state.accessToken} />} />\n\n\n\n                </Switch>\n\n\n            </div>\n        </React.Fragment>);\n    }\n\n}\n\nexport default withRouter(UserPage);","import React from 'react';\n// import axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\n// const spotifyLoginURL = 'http://localhost:5000/api/login-spotify';\n// const spotifyLoginURL = 'https://whatmuzak.herokuapp.com/api/login-spotify';\n// const spotifyLoginURL = '/api/login-spotify';\n\n\nclass Login extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //     };\n    //     // declare methods here\n    //     // this.signInWithSpotify = this.signInWithSpotify.bind(this);\n    // }\n\n    componentDidMount() {\n\n        console.log(this.props);\n\n    }\n\n    // signInWithSpotify = () => {\n    //     axios.get(spotifyLoginURL)\n    //         .then(response => console.log(response))\n    //         .catch(error => console.log(error));\n    // };\n\n    render() {\n\n        // const spotifyLoginURL = '/api/login-spotify';\n        const spotifyLoginURL = 'http://localhost:5000/api/login-spotify';\n\n        return(\n            <React.Fragment>\n                <div className=\"container\">\n\n                    <h5 className=\"propaganda-text-stroke mb-5 ml-auto text-center\" style={{width: '50%'}}>Musical compatibility is important to many people. And that makes sense - music is really intimate; it's emotional.</h5>\n\n\n                    <h4 className=\"propaganda-text-stroke-black mb-2 mx-auto text-center\" style={{width: '50%'}}>Find your<br/> music soulmate.</h4>\n                    <div className=\"text-center\">\n                        {/*<button*/}\n                            {/*className=\"btn btn-sm btn-outline-primary\"*/}\n                            {/*style={{borderWidth: '2px'}}*/}\n                            {/*onClick={this.signInWithSpotify}>*/}\n                            {/*<span className=\"font-weight-bold\"><u>Sign in with Spotify</u></span>*/}\n                        {/*</button>*/}\n\n                        <a href={spotifyLoginURL}>\n                        {/*<Link to={spotifyLoginURL}>*/}\n                            <button\n                                className=\"btn btn-sm btn-outline-primary\"\n                                style={{borderWidth: '2px'}}\n                                onClick={this.signInWithSpotify}>\n                                <span className=\"font-weight-bold\"><u>Sign in with Spotify</u></span>\n                            </button>\n                        {/*</Link>*/}\n                        </a>\n                    </div>\n\n                </div>\n\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default Login;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport UserPage from \"./UserPage\";\n// import MyNavbar from \"./MyNavbar\";\n\nclass GotAccessToken extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accessToken: null,\n        };\n        // declare methods here\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n\n        // const accessToken = this.props.location.search.split('?access_token=')[1];\n        const accessToken = this.props.match.params.token;\n        //\n        // console.log('from params', accessToken);\n        this.setState({accessToken: accessToken});\n\n    }\n\n    render() {\n        return(<React.Fragment>\n\n            {this.state.accessToken && <UserPage accessToken={this.state.accessToken} /> }\n\n        </React.Fragment>);\n    }\n\n\n}\n\nexport default withRouter(GotAccessToken);","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport UserPage from './UserPage';\nimport Login from './Login';\nimport GotAccessToken from './GotAccessToken';\n\n\nclass ContentArea extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n        // declare methods here\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div className=\"my-background\">\n\n                    <Route path=\"/\" exact component={Login} />\n                    <Route path=\"/user/:token\" component={GotAccessToken} />\n\n                </div>\n            </React.Fragment>\n        );\n    }\n};\n\nexport default ContentArea;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport ContentArea from './components/ContentArea';\n// import axios from 'axios';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <ContentArea />\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}